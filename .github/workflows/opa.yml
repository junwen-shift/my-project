name: Run OPA Tests
on:
  workflow_run:
    workflows: ["Java CI with Gradle"]
    types: [completed]
jobs:
  Run-OPA-Tests:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success'
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3

    # Print the GitHub event context
    - name: Print GitHub Event Context
      run: |
        echo "GitHub Event Context:"
        echo "${{ toJson(github) }}"

    - name: Setup OPA
      uses: open-policy-agent/setup-opa@v2
      with:
        version: latest

    - name: OPA Version
      run: opa version

    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: latest

    - name: Terraform Init
      run: terraform init
      working-directory: terraform
    
    - name: Terraform Plan
      run: terraform plan -out=tfplan2
      working-directory: terraform

    - name: Terraform Show
      run: terraform show -json tfplan2 > tfplan2.json
      working-directory: terraform

    - name: Run OPA Tests
      run: |
        opa eval --data  tests/terraform.rego --input  terraform/tfplan2.json "data.terraform.analysis.resource_change_summary" > opa_result.json
        cat opa_result.json
        opa_result=$(jq -c '.result[0].expressions[0].value' opa_result.json)
        echo $opa_result
        escaped_result=$(echo "$opa_result" | sed 's/"/\\"/g')
        echo "opa_result=$escaped_result" >> $GITHUB_ENV

    # Approve the PR if the "approved" attribute is true
    - name: Approve Pull Request
      if: github.event_name == 'pull_request' && env.approved == 'true'
      uses: octokit/request-action@v2.4.0
      with:
        route: POST /repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews
        body: 'The automated process has approved this PR.'
        owner: review_bot
        event: APPROVE
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Merge the PR if the "approved" attribute is true
    - name: Mergr Pull Request
      if: github.event_name == 'pull_request' && env.approved == 'true'
      uses: octokit/request-action@v2.4.0
      with:
        route: PUT /repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/merge
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
